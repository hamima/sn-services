/*****************************************************************
JADE - Java Agent DEvelopment Framework is a framework to develop 
multi-agent systems in compliance with the FIPA specifications.
Copyright (C) 2000 CSELT S.p.A. 

GNU Lesser General Public License

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation, 
version 2.1 of the License. 

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the
Free Software Foundation, Inc., 59 Temple Place - Suite 330,
Boston, MA  02111-1307, USA.
*****************************************************************/


package jade.tools.persistence;

import java.awt.CardLayout;
import javax.swing.JDialog;
import javax.swing.JFileChooser;


/**
 *
 * @author  Giovanni Rimassa - FRAMeTech s.r.l.
 */
class ConnectPlatformDlgBody extends javax.swing.JPanel {

    public static final int PROFILE_USEDEFAULT = 1;
    public static final int PROFILE_USEHOSTANDPORT = 2;
    public static final int PROFILE_USEPROPERTIES = 3;

    /** Creates new form ConnectPlatformDlgBody */
    public ConnectPlatformDlgBody(JDialog dlg) {
        myDialog = dlg;
        initComponents();
    }

    public boolean isAccepted() {
        return accepted;
    }

    public boolean isMainContainer() {
        return createMainRadio.isSelected();
    }

    public String getAgentNickname() {
        return nickField.getText();
    }

    public int getProfileKind() {
        if(useDefaultProfileRadio.isSelected()) {
            return PROFILE_USEDEFAULT;
        }
        else if(useHostPortRadio.isSelected()) {
            return PROFILE_USEHOSTANDPORT;
        }
        else {
            return PROFILE_USEPROPERTIES;
        }
    }

    public String getMetaDB() {
        if(!usePropertiesRadio.isSelected()) {
            return metaDBUrlField.getText();
        }
        else {
            return null;
        }
    }
    
    public String getProfileHost() {
        if(useHostPortRadio.isSelected()) {
            return profileHostField.getText();
        }
        else {
            return null;
        }
    }

    public int getProfilePort() {
        if(useHostPortRadio.isSelected()) {
            try {
                return Integer.parseInt(profilePortField.getText());
            }
            catch(NumberFormatException nfe) {
                return 1099;
            }
        }
        else {
            return -1;
        }
    }

    public String getProfileName() {
        if(useHostPortRadio.isSelected()) {
            return profileNameField.getText();
        }
        else {
            return null;
        }
    }

    public String getPropertiesURL() {
        if(usePropertiesRadio.isSelected()) {
            return propsUrlField.getText();
        }
        else {
            return null;
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        javax.swing.JPanel bottomSpace;
        javax.swing.JPanel bottomSpace1;
        javax.swing.JPanel topSpace;
        javax.swing.JPanel topSpace1;

        createContainerGroup = new javax.swing.ButtonGroup();
        createProfileGroup = new javax.swing.ButtonGroup();
        nickPanel = new javax.swing.JPanel();
        borderPanel = new javax.swing.JPanel();
        nickField = new javax.swing.JTextField();
        topPanel = new javax.swing.JPanel();
        containerKind = new javax.swing.JPanel();
        createMainRadio = new javax.swing.JRadioButton();
        createPeripheralRadio = new javax.swing.JRadioButton();
        profileKind = new javax.swing.JPanel();
        useDefaultProfileRadio = new javax.swing.JRadioButton();
        useHostPortRadio = new javax.swing.JRadioButton();
        usePropertiesRadio = new javax.swing.JRadioButton();
        metaDBPanel = new javax.swing.JPanel();
        propsUrlPanel1 = new javax.swing.JPanel();
        topSpace1 = new javax.swing.JPanel();
        metaDBUrlField = new javax.swing.JTextField();
        bottomSpace1 = new javax.swing.JPanel();
        metaDBBrowseButtonPanel = new javax.swing.JPanel();
        metaDBBrowseButton = new javax.swing.JButton();
        middlePanel = new javax.swing.JPanel();
        defaultProfileLabel = new javax.swing.JLabel();
        hostPortProfilePanel = new javax.swing.JPanel();
        profileHostField = new javax.swing.JTextField();
        colonLabel = new javax.swing.JLabel();
        profilePortField = new javax.swing.JTextField();
        slashLabel = new javax.swing.JLabel();
        profileNameField = new javax.swing.JTextField();
        propertiesProfilePanel = new javax.swing.JPanel();
        propsUrlPanel = new javax.swing.JPanel();
        topSpace = new javax.swing.JPanel();
        propsUrlField = new javax.swing.JTextField();
        bottomSpace = new javax.swing.JPanel();
        browseButtonPanel = new javax.swing.JPanel();
        browseButton = new javax.swing.JButton();
        bottomPanel = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        nickPanel.setLayout(new javax.swing.BoxLayout(nickPanel, javax.swing.BoxLayout.X_AXIS));

        nickPanel.setBorder(new javax.swing.border.TitledBorder(null, "Agent Nickname", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12)));
        borderPanel.setLayout(new javax.swing.BoxLayout(borderPanel, javax.swing.BoxLayout.X_AXIS));

        borderPanel.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(3, 10, 5, 10)));
        nickField.setColumns(20);
        borderPanel.add(nickField);

        nickPanel.add(borderPanel);

        add(nickPanel);

        topPanel.setLayout(new java.awt.GridLayout(2, 1));

        topPanel.setBorder(new javax.swing.border.TitledBorder(null, "Connection Kind", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10)));
        containerKind.setLayout(new javax.swing.BoxLayout(containerKind, javax.swing.BoxLayout.X_AXIS));

        createMainRadio.setFont(new java.awt.Font("Dialog", 0, 10));
        createMainRadio.setText("Create Standalone Platform");
        createMainRadio.setSelected(true);
        createContainerGroup.add(createMainRadio);
        containerKind.add(createMainRadio);

        createPeripheralRadio.setFont(new java.awt.Font("Dialog", 0, 10));
        createPeripheralRadio.setText("Connect to Existing Platform");
        createContainerGroup.add(createPeripheralRadio);
        containerKind.add(createPeripheralRadio);

        topPanel.add(containerKind);

        profileKind.setLayout(new javax.swing.BoxLayout(profileKind, javax.swing.BoxLayout.X_AXIS));

        useDefaultProfileRadio.setFont(new java.awt.Font("Dialog", 0, 10));
        useDefaultProfileRadio.setText("Use Default Profile");
        useDefaultProfileRadio.setSelected(true);
        createProfileGroup.add(useDefaultProfileRadio);
        useDefaultProfileRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useDefaultProfileRadioActionPerformed(evt);
            }
        });

        profileKind.add(useDefaultProfileRadio);

        useHostPortRadio.setFont(new java.awt.Font("Dialog", 0, 10));
        useHostPortRadio.setText("Specify Host, Port and Name");
        createProfileGroup.add(useHostPortRadio);
        useHostPortRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useHostPortRadioActionPerformed(evt);
            }
        });

        profileKind.add(useHostPortRadio);

        usePropertiesRadio.setFont(new java.awt.Font("Dialog", 0, 10));
        usePropertiesRadio.setText("Load Profile Properties from URL");
        createProfileGroup.add(usePropertiesRadio);
        usePropertiesRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usePropertiesRadioActionPerformed(evt);
            }
        });

        profileKind.add(usePropertiesRadio);

        topPanel.add(profileKind);

        add(topPanel);

        metaDBPanel.setLayout(new javax.swing.BoxLayout(metaDBPanel, javax.swing.BoxLayout.X_AXIS));

        metaDBPanel.setBorder(new javax.swing.border.TitledBorder(null, "Meta DB URL", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10)));
        propsUrlPanel1.setLayout(new javax.swing.BoxLayout(propsUrlPanel1, javax.swing.BoxLayout.Y_AXIS));

        propsUrlPanel1.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(2, 2, 2, 2)));
        propsUrlPanel1.add(topSpace1);

        metaDBUrlField.setColumns(40);
        metaDBUrlField.setFont(new java.awt.Font("Dialog", 0, 10));
        metaDBUrlField.setToolTipText("Insert the URL to load Properties from");
        propsUrlPanel1.add(metaDBUrlField);

        propsUrlPanel1.add(bottomSpace1);

        metaDBPanel.add(propsUrlPanel1);

        metaDBBrowseButtonPanel.setLayout(new javax.swing.BoxLayout(metaDBBrowseButtonPanel, javax.swing.BoxLayout.X_AXIS));

        metaDBBrowseButtonPanel.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(2, 5, 2, 2)));
        metaDBBrowseButton.setFont(new java.awt.Font("Dialog", 1, 10));
        metaDBBrowseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jade/tools/persistence/images/open.gif")));
        metaDBBrowseButton.setToolTipText("Browse Files...");
        metaDBBrowseButton.setBorder(new javax.swing.border.EtchedBorder());
        metaDBBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metaDBBrowseButtonActionPerformed(evt);
            }
        });

        metaDBBrowseButtonPanel.add(metaDBBrowseButton);

        metaDBPanel.add(metaDBBrowseButtonPanel);

        add(metaDBPanel);

        middlePanel.setLayout(new java.awt.CardLayout());

        middlePanel.setBorder(new javax.swing.border.TitledBorder(null, "Connection Data", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10)));
        defaultProfileLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        defaultProfileLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        defaultProfileLabel.setText("<No Configuration Needed>");
        defaultProfileLabel.setEnabled(false);
        middlePanel.add(defaultProfileLabel, "Default");

        profileHostField.setColumns(15);
        profileHostField.setFont(new java.awt.Font("Dialog", 0, 10));
        profileHostField.setToolTipText("Insert the Host Name");
        hostPortProfilePanel.add(profileHostField);

        colonLabel.setFont(new java.awt.Font("Dialog", 1, 10));
        colonLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        colonLabel.setText(":");
        hostPortProfilePanel.add(colonLabel);

        profilePortField.setColumns(5);
        profilePortField.setFont(new java.awt.Font("Dialog", 0, 10));
        profilePortField.setToolTipText("Insert the Port Value");
        hostPortProfilePanel.add(profilePortField);

        slashLabel.setFont(new java.awt.Font("Dialog", 1, 10));
        slashLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        slashLabel.setText("/");
        hostPortProfilePanel.add(slashLabel);

        profileNameField.setColumns(25);
        profileNameField.setFont(new java.awt.Font("Dialog", 0, 10));
        profileNameField.setToolTipText("Insert the Platform Name");
        hostPortProfilePanel.add(profileNameField);

        middlePanel.add(hostPortProfilePanel, "HostAndPort");

        propertiesProfilePanel.setLayout(new javax.swing.BoxLayout(propertiesProfilePanel, javax.swing.BoxLayout.X_AXIS));

        propsUrlPanel.setLayout(new javax.swing.BoxLayout(propsUrlPanel, javax.swing.BoxLayout.Y_AXIS));

        propsUrlPanel.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(2, 2, 2, 2)));
        propsUrlPanel.add(topSpace);

        propsUrlField.setColumns(40);
        propsUrlField.setFont(new java.awt.Font("Dialog", 0, 10));
        propsUrlField.setToolTipText("Insert the URL to load Properties from");
        propsUrlPanel.add(propsUrlField);

        propsUrlPanel.add(bottomSpace);

        propertiesProfilePanel.add(propsUrlPanel);

        browseButtonPanel.setLayout(new javax.swing.BoxLayout(browseButtonPanel, javax.swing.BoxLayout.X_AXIS));

        browseButtonPanel.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(2, 5, 2, 2)));
        browseButton.setFont(new java.awt.Font("Dialog", 1, 10));
        browseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jade/tools/persistence/images/open.gif")));
        browseButton.setToolTipText("Browse Files...");
        browseButton.setBorder(new javax.swing.border.EtchedBorder());
        browseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButtonActionPerformed(evt);
            }
        });

        browseButtonPanel.add(browseButton);

        propertiesProfilePanel.add(browseButtonPanel);

        middlePanel.add(propertiesProfilePanel, "Properties");

        add(middlePanel);

        bottomPanel.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(10, 3, 3, 3)));
        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        bottomPanel.add(okButton);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        bottomPanel.add(cancelButton);

        add(bottomPanel);

    }//GEN-END:initComponents

    private void metaDBBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metaDBBrowseButtonActionPerformed
        int returnVal = metaDBFileChooser.showOpenDialog(this);
        if(returnVal == JFileChooser.APPROVE_OPTION) {
            metaDBUrlField.setText(metaDBFileChooser.getSelectedFile().toURI().toString());
        }
    }//GEN-LAST:event_metaDBBrowseButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        closeDialog();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        accepted = true;
        closeDialog();
    }//GEN-LAST:event_okButtonActionPerformed

    private void browseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonActionPerformed
        int returnVal = propsFileChooser.showOpenDialog(this);
        if(returnVal == JFileChooser.APPROVE_OPTION) {
            propsUrlField.setText(propsFileChooser.getSelectedFile().toURI().toString());
        }
    }//GEN-LAST:event_browseButtonActionPerformed

    private void usePropertiesRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usePropertiesRadioActionPerformed
        CardLayout layout = (CardLayout)middlePanel.getLayout();
        layout.show(middlePanel, "Properties");
    }//GEN-LAST:event_usePropertiesRadioActionPerformed

    private void useHostPortRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useHostPortRadioActionPerformed
        CardLayout layout = (CardLayout)middlePanel.getLayout();
        layout.show(middlePanel, "HostAndPort");
    }//GEN-LAST:event_useHostPortRadioActionPerformed

    private void useDefaultProfileRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useDefaultProfileRadioActionPerformed
        CardLayout layout = (CardLayout)middlePanel.getLayout();
        layout.show(middlePanel, "Default");
    }//GEN-LAST:event_useDefaultProfileRadioActionPerformed

    private void closeDialog() {
        myDialog.setVisible(false);
        myDialog.dispose();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel borderPanel;
    private javax.swing.JPanel bottomPanel;
    private javax.swing.JButton browseButton;
    private javax.swing.JPanel browseButtonPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel colonLabel;
    private javax.swing.JPanel containerKind;
    private javax.swing.ButtonGroup createContainerGroup;
    private javax.swing.JRadioButton createMainRadio;
    private javax.swing.JRadioButton createPeripheralRadio;
    private javax.swing.ButtonGroup createProfileGroup;
    private javax.swing.JLabel defaultProfileLabel;
    private javax.swing.JPanel hostPortProfilePanel;
    private javax.swing.JButton metaDBBrowseButton;
    private javax.swing.JPanel metaDBBrowseButtonPanel;
    private javax.swing.JPanel metaDBPanel;
    private javax.swing.JTextField metaDBUrlField;
    private javax.swing.JPanel middlePanel;
    private javax.swing.JTextField nickField;
    private javax.swing.JPanel nickPanel;
    private javax.swing.JButton okButton;
    private javax.swing.JTextField profileHostField;
    private javax.swing.JPanel profileKind;
    private javax.swing.JTextField profileNameField;
    private javax.swing.JTextField profilePortField;
    private javax.swing.JPanel propertiesProfilePanel;
    private javax.swing.JTextField propsUrlField;
    private javax.swing.JPanel propsUrlPanel;
    private javax.swing.JPanel propsUrlPanel1;
    private javax.swing.JLabel slashLabel;
    private javax.swing.JPanel topPanel;
    private javax.swing.JRadioButton useDefaultProfileRadio;
    private javax.swing.JRadioButton useHostPortRadio;
    private javax.swing.JRadioButton usePropertiesRadio;
    // End of variables declaration//GEN-END:variables

    private JDialog myDialog;
    private JFileChooser propsFileChooser = new JFileChooser();
    private JFileChooser metaDBFileChooser = new JFileChooser();
    private boolean accepted = false;
    
}
